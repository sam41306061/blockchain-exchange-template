{"ast":null,"code":"export const provider = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'PROVIDER_LOADED':\n      return { ...state,\n        connection: action.connection\n      };\n\n    case 'NETWORK_LOADED':\n      return { ...state,\n        chainId: action.chainId\n      };\n\n    case 'ACCOUNT_LOADED':\n      return { ...state,\n        account: action.account\n      };\n\n    case 'ETHER_BALANCE_LOADED':\n      return { ...state,\n        balance: action.balance\n      };\n\n    default:\n      return state;\n  }\n}; // default setting\n\nconst DEFAULT_TOKENS_STATE = {\n  loaded: false,\n  contracts: [],\n  symbols: []\n};\nexport const tokens = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_TOKENS_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'TOKEN_1_LOADED':\n      return { ...state,\n        loaded: true,\n        contracts: [...state.contracts, action.token],\n        symbols: [...state.symbols, action.symbol]\n      };\n\n    case 'TOKEN_2_LOADED':\n      return { ...state,\n        loaded: true,\n        contracts: [...state.contracts, action.token],\n        symbols: [...state.symbols, action.symbol]\n      };\n\n    default:\n      return state;\n  }\n}; // reducing the exchange \n\nexport const exchange = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    loaded: false,\n    contract: {}\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'EXCHANGE_LOADED':\n      return { ...state,\n        loaded: true,\n        contract: action.exchange\n      };\n    // ------------------------------------------------------------------------------\n    // BALANCE CASES\n\n    case 'EXCHANGE_TOKEN_1_BALANCE_LOADED':\n      return { ...state,\n        balances: [action.balance]\n      };\n\n    case 'EXCHANGE_TOKEN_2_BALANCE_LOADED':\n      return { ...state,\n        balances: [...state.balances, action.balance]\n      };\n    // ------------------------------------------------------------------------------\n    // TRANSFER CASES (DEPOSIT & WITHDRAWS)\n\n    case 'TRANSFER_REQUEST':\n      return { ...state,\n        trasnsaction: {\n          transactionType: 'Transfer',\n          isPending: true,\n          isSuccessful: false\n        },\n        transferInProgress: true\n      };\n\n    case 'TRANSFER_SUCCESS':\n      return { ...state,\n        transaction: {\n          transactionType: 'Transfer',\n          isPending: false,\n          isSuccessful: true\n        },\n        transferInProgress: false,\n        events: [action.event, ...state.events]\n      };\n\n    case 'TRANSFER_FAIL':\n      return { ...state,\n        transaction: {\n          transactionType: 'Transfer',\n          isPending: false,\n          isSuccessful: false,\n          isError: true\n        },\n        transferInProgress: false\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/sam4130/Documents/Blockchain/BLCP-ui-redux-setup/src/store/reducers.js"],"names":["provider","state","action","type","connection","chainId","account","balance","DEFAULT_TOKENS_STATE","loaded","contracts","symbols","tokens","token","symbol","exchange","contract","balances","trasnsaction","transactionType","isPending","isSuccessful","transferInProgress","transaction","events","event","isError"],"mappings":"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","sourcesContent":["export const provider = (state = {}, action) => {\n  switch (action.type) {\n    case 'PROVIDER_LOADED':\n      return {\n        ...state,\n        connection: action.connection\n      }\n    case 'NETWORK_LOADED':\n      return {\n        ...state,\n        chainId: action.chainId\n      }\n    case 'ACCOUNT_LOADED':\n      return {\n        ...state,\n        account: action.account\n      }\n      case 'ETHER_BALANCE_LOADED':\n      return {\n        ...state,\n        balance: action.balance\n      }\n\n    default:\n      return state\n  }\n}\n\n// default setting\nconst DEFAULT_TOKENS_STATE = {\n  loaded: false, \n  contracts:[], \n  symbols:[] \n}\n\nexport const tokens = (state = DEFAULT_TOKENS_STATE, action) => {\n  switch (action.type) {\n    case 'TOKEN_1_LOADED':\n      return {\n        ...state,\n        loaded: true,\n        contracts:[...state.contracts, action.token],\n        symbols: [...state.symbols, action.symbol]\n      }\n      case 'TOKEN_2_LOADED':\n      return {\n        ...state,\n        loaded: true,\n        contracts:[...state.contracts, action.token],\n        symbols: [...state.symbols, action.symbol]\n      }\n      default:\n        return state\n  }\n}\n\n// reducing the exchange \nexport const exchange = (state = {loaded: false, contract: {} }, action) =>{\n  switch (action.type) {\n    case 'EXCHANGE_LOADED': \n    return{\n      ...state,\n      loaded: true,\n      contract: action.exchange\n    }\n    // ------------------------------------------------------------------------------\n    // BALANCE CASES\n    case 'EXCHANGE_TOKEN_1_BALANCE_LOADED':\n      return {\n        ...state,\n        balances: [action.balance]\n      }\n    case 'EXCHANGE_TOKEN_2_BALANCE_LOADED':\n      return {\n        ...state,\n        balances: [...state.balances, action.balance]\n      }\n\n    // ------------------------------------------------------------------------------\n    // TRANSFER CASES (DEPOSIT & WITHDRAWS)\n    case 'TRANSFER_REQUEST':\n      return {\n        ...state,\n        trasnsaction: {\n          transactionType: 'Transfer',\n          isPending: true,\n          isSuccessful: false\n        },\n        transferInProgress: true\n      }\n    case 'TRANSFER_SUCCESS':\n      return {\n        ...state,\n        transaction: {\n          transactionType: 'Transfer',\n          isPending: false,\n          isSuccessful: true\n        },\n        transferInProgress: false,\n        events: [action.event, ...state.events]\n      }\n    case 'TRANSFER_FAIL':\n      return {\n        ...state,\n        transaction: {\n          transactionType: 'Transfer',\n          isPending: false,\n          isSuccessful: false,\n          isError: true\n\n        },\n        transferInProgress: false\n      }\n    default:\n      return state\n  }\n  \n}"]},"metadata":{},"sourceType":"module"}