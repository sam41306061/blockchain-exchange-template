{"ast":null,"code":"var _jsxFileName = \"/Users/sam4130/Documents/Blockchain/BLCP-ui-redux-setup/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport config from '../config.json';\nimport { loadProvider, loadNetwork, loadAccount, loadTokens, loadExchange, subscribeToEvents } from '../store/interactions';\nimport Navbar from './Navbar';\nimport Markets from './Markets';\nimport Balance from './Balance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const loadBlockchainData = async () => {\n    // Connect Ethers to blockchain\n    const provider = loadProvider(dispatch); // Fetch current network's chainId (e.g. hardhat: 31337, kovan: 42)\n\n    const chainId = await loadNetwork(provider, dispatch); // Reload page when network changes\n\n    window.ethereum.on('chainChanged', () => {\n      window.location.reload();\n    }); // Fetch current account & balance from Metamask when changed\n\n    window.ethereum.on('accountsChanged', () => {\n      loadAccount(provider, dispatch);\n    }); // Load token smart contracts\n\n    const DApp = config[chainId].DApp;\n    const mETH = config[chainId].mETH;\n    await loadTokens(provider, [DApp.address, mETH.address], dispatch); // Load exchange smart contract\n\n    const exchangeConfig = config[chainId].exchange;\n    const exchange = await loadExchange(provider, exchangeConfig.address, dispatch); // Listen to events\n\n    subscribeToEvents(exchange, dispatch);\n  };\n\n  useEffect(() => {\n    loadBlockchainData();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"exchange grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"exchange__section--left grid\",\n        children: [/*#__PURE__*/_jsxDEV(Markets, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Balance, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"exchange__section--right grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sam4130/Documents/Blockchain/BLCP-ui-redux-setup/src/components/App.js"],"names":["useEffect","useDispatch","config","loadProvider","loadNetwork","loadAccount","loadTokens","loadExchange","subscribeToEvents","Navbar","Markets","Balance","App","dispatch","loadBlockchainData","provider","chainId","window","ethereum","on","location","reload","DApp","mETH","address","exchangeConfig","exchange"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AAEA,SACEC,YADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,YALF,EAMEC,iBANF,QAOO,uBAPP;AASA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;;AAEA,QAAMa,kBAAkB,GAAG,YAAY;AACrC;AACA,UAAMC,QAAQ,GAAGZ,YAAY,CAACU,QAAD,CAA7B,CAFqC,CAIrC;;AACA,UAAMG,OAAO,GAAG,MAAMZ,WAAW,CAACW,QAAD,EAAWF,QAAX,CAAjC,CALqC,CAOrC;;AACAI,IAAAA,MAAM,CAACC,QAAP,CAAgBC,EAAhB,CAAmB,cAAnB,EAAmC,MAAM;AACvCF,MAAAA,MAAM,CAACG,QAAP,CAAgBC,MAAhB;AACD,KAFD,EARqC,CAYrC;;AACAJ,IAAAA,MAAM,CAACC,QAAP,CAAgBC,EAAhB,CAAmB,iBAAnB,EAAsC,MAAM;AAC1Cd,MAAAA,WAAW,CAACU,QAAD,EAAWF,QAAX,CAAX;AACD,KAFD,EAbqC,CAiBrC;;AACA,UAAMS,IAAI,GAAGpB,MAAM,CAACc,OAAD,CAAN,CAAgBM,IAA7B;AACA,UAAMC,IAAI,GAAGrB,MAAM,CAACc,OAAD,CAAN,CAAgBO,IAA7B;AACA,UAAMjB,UAAU,CAACS,QAAD,EAAW,CAACO,IAAI,CAACE,OAAN,EAAeD,IAAI,CAACC,OAApB,CAAX,EAAyCX,QAAzC,CAAhB,CApBqC,CAsBrC;;AACA,UAAMY,cAAc,GAAGvB,MAAM,CAACc,OAAD,CAAN,CAAgBU,QAAvC;AACA,UAAMA,QAAQ,GAAG,MAAMnB,YAAY,CAACQ,QAAD,EAAWU,cAAc,CAACD,OAA1B,EAAmCX,QAAnC,CAAnC,CAxBqC,CA0BrC;;AACAL,IAAAA,iBAAiB,CAACkB,QAAD,EAAWb,QAAX,CAAjB;AACD,GA5BD;;AA8BAb,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,kBAAkB;AACnB,GAFQ,CAAT;AAIA,sBACE;AAAA,4BAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA,8BACE;AAAS,QAAA,SAAS,EAAC,8BAAnB;AAAA,gCAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAIE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAS,QAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GArEQF,G;UACUX,W;;;KADVW,G;AAuET,eAAeA,GAAf","sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport config from '../config.json';\n\nimport {\n  loadProvider,\n  loadNetwork,\n  loadAccount,\n  loadTokens,\n  loadExchange,\n  subscribeToEvents\n} from '../store/interactions';\n\nimport Navbar from './Navbar'\nimport Markets from './Markets'\nimport Balance from './Balance'\n\nfunction App() {\n  const dispatch = useDispatch()\n\n  const loadBlockchainData = async () => {\n    // Connect Ethers to blockchain\n    const provider = loadProvider(dispatch)\n\n    // Fetch current network's chainId (e.g. hardhat: 31337, kovan: 42)\n    const chainId = await loadNetwork(provider, dispatch)\n\n    // Reload page when network changes\n    window.ethereum.on('chainChanged', () => {\n      window.location.reload()\n    })\n\n    // Fetch current account & balance from Metamask when changed\n    window.ethereum.on('accountsChanged', () => {\n      loadAccount(provider, dispatch)\n    })\n\n    // Load token smart contracts\n    const DApp = config[chainId].DApp\n    const mETH = config[chainId].mETH\n    await loadTokens(provider, [DApp.address, mETH.address], dispatch)\n\n    // Load exchange smart contract\n    const exchangeConfig = config[chainId].exchange\n    const exchange = await loadExchange(provider, exchangeConfig.address, dispatch)\n\n    // Listen to events\n    subscribeToEvents(exchange, dispatch)\n  }\n\n  useEffect(() => {\n    loadBlockchainData()\n  })\n\n  return (\n    <div>\n\n      <Navbar />\n\n      <main className='exchange grid'>\n        <section className='exchange__section--left grid'>\n\n          <Markets />\n\n          <Balance />\n\n          {/* Order */}\n\n        </section>\n        <section className='exchange__section--right grid'>\n\n          {/* PriceChart */}\n\n          {/* Transactions */}\n\n          {/* Trades */}\n\n          {/* OrderBook */}\n\n        </section>\n      </main>\n\n      {/* Alert */}\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}