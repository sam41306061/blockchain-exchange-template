{"ast":null,"code":"var _jsxFileName = \"/Users/sam4130/Documents/Blockchain/BLCP-ui-redux-setup/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport config from '../config.json'; // components\n\nimport Navbar from './Navbar';\nimport Markets from './Markets';\nimport Balance from './Balance';\nimport Order from './Order';\nimport { loadProvider, loadNetwork, loadAccount, loadTokens, loadExchange } from '../store/interactions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch(); // react-redux hook\n\n  const loadBlockchainData = async () => {\n    // Connect Ethers to blockchain\n    const provider = loadProvider(dispatch); // fetch current networks's chainID(e.g hardhat: 31337, kovan: 42)\n\n    const chainId = await loadNetwork(provider, dispatch); // fetch curruent account & balance from Meta\n\n    await loadAccount(provider, dispatch); // loads token smart contracts\n\n    const DApp = config[chainId].DApp;\n    const mETH = config[chainId].mETH;\n    await loadTokens(provider, [DApp.address, mETH.address], dispatch); // Load the exchange smart contract\n\n    const exchangeConfig = config[chainId].exchange;\n    await loadExchange(provider, exchangeConfig.address, dispatch);\n  };\n\n  useEffect(() => {\n    loadBlockchainData();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"exchange grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"exchange__section--left grid\",\n        children: [/*#__PURE__*/_jsxDEV(Markets, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Balance, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Order, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"exchange__section--right grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sam4130/Documents/Blockchain/BLCP-ui-redux-setup/src/components/App.js"],"names":["useEffect","useDispatch","config","Navbar","Markets","Balance","Order","loadProvider","loadNetwork","loadAccount","loadTokens","loadExchange","App","dispatch","loadBlockchainData","provider","chainId","DApp","mETH","address","exchangeConfig","exchange"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,gBAAnB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAGA,SACEC,YADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,YALF,QAMO,uBANP;;;AAQA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B,CADa,CACkB;;AAE/B,QAAMa,kBAAkB,GAAG,YAAY;AACrC;AACA,UAAMC,QAAQ,GAAGR,YAAY,CAACM,QAAD,CAA7B,CAFqC,CAIrC;;AACA,UAAMG,OAAO,GAAG,MAAMR,WAAW,CAACO,QAAD,EAAWF,QAAX,CAAjC,CALqC,CAOrC;;AACA,UAAMJ,WAAW,CAACM,QAAD,EAAWF,QAAX,CAAjB,CARqC,CAUrC;;AACA,UAAMI,IAAI,GAAGf,MAAM,CAACc,OAAD,CAAN,CAAgBC,IAA7B;AACA,UAAMC,IAAI,GAAGhB,MAAM,CAACc,OAAD,CAAN,CAAgBE,IAA7B;AACA,UAAMR,UAAU,CAACK,QAAD,EAAU,CAACE,IAAI,CAACE,OAAN,EAAeD,IAAI,CAACC,OAApB,CAAV,EAAwCN,QAAxC,CAAhB,CAbqC,CAenC;;AACJ,UAAMO,cAAc,GAAGlB,MAAM,CAACc,OAAD,CAAN,CAAgBK,QAAvC;AACA,UAAMV,YAAY,CAACI,QAAD,EAAWK,cAAc,CAACD,OAA1B,EAAmCN,QAAnC,CAAlB;AAEC,GAnBD;;AAoBAb,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,kBAAkB;AACnB,GAFQ,CAAT;AAIA,sBACE;AAAA,4BAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA,8BACE;AAAS,QAAA,SAAS,EAAC,8BAAnB;AAAA,gCAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAIE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAJF,eAME,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAS,QAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GA1DQF,G;UACUX,W;;;KADVW,G;AA4DT,eAAeA,GAAf","sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport config from '../config.json';\n\n// components\nimport Navbar from './Navbar';\nimport Markets from './Markets';\nimport Balance from './Balance';\nimport Order from './Order';\n\n\nimport {\n  loadProvider,\n  loadNetwork,\n  loadAccount,\n  loadTokens,\n  loadExchange\n} from '../store/interactions';\n\nfunction App() {\n  const dispatch = useDispatch() // react-redux hook\n\n  const loadBlockchainData = async () => {\n    // Connect Ethers to blockchain\n    const provider = loadProvider(dispatch)\n\n    // fetch current networks's chainID(e.g hardhat: 31337, kovan: 42)\n    const chainId = await loadNetwork(provider, dispatch)\n\n    // fetch curruent account & balance from Meta\n    await loadAccount(provider, dispatch)\n\n    // loads token smart contracts\n    const DApp = config[chainId].DApp\n    const mETH = config[chainId].mETH\n    await loadTokens(provider,[DApp.address, mETH.address], dispatch)\n\n      // Load the exchange smart contract\n  const exchangeConfig = config[chainId].exchange\n  await loadExchange(provider, exchangeConfig.address, dispatch) \n\n  }\n  useEffect(() => {\n    loadBlockchainData()\n  })\n\n  return (\n    <div>\n\n      <Navbar></Navbar>\n\n      <main className='exchange grid'>\n        <section className='exchange__section--left grid'>\n\n          <Markets></Markets>\n\n          <Balance></Balance>\n\n          <Order></Order>\n        </section>\n        <section className='exchange__section--right grid'>\n\n          {/* PriceChart */}\n\n          {/* Transactions */}\n\n          {/* Trades */}\n\n          {/* OrderBook */}\n\n        </section>\n      </main>\n\n      {/* Alert */}\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}